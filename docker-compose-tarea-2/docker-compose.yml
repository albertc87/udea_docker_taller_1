version: '3.3'

services:
  db:
    image: mysql:5.7
    networks: 
      - back-net
    ports: 
      - '3306:3306'
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    environment:
       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
       MYSQL_DATABASE: ${MYSQL_DATABASE}
       MYSQL_USER: ${MYSQL_USER}
       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  
  backend:
    build: ./backend
    ports:      
      - "8080:8080"
    depends_on:
      - db
    networks: 
      - back-net
      - front-net
    deploy:  
      resources:  
        limits:
          cpus: '1'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 50M

  frontend:
    build: ./frontend
    ports:
     - "3000:3000"
    depends_on:
     - backend
    networks: 
     - front-net

  logspout:  
    image: gliderlabs/logspout:v3
    command: 'udp://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
  kibana:  
    image: docker.elastic.co/kibana/kibana:6.4.2
    links:
      - 'elastic:elasticsearch'
    ports:
      - '5601:5601'
  logstash:  
    image: docker.elastic.co/logstash/logstash:6.4.2
    command: 'logstash -e "input { udp { port => 5000 } } output { elasticsearch { hosts => elastic } }"'
    links:
      - elastic
  elastic:  
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
                  
      
volumes:
  db-data:

networks: 
  back-net:
  front-net:
